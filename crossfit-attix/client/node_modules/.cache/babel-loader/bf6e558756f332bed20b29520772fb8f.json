{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macuser/projects/crossfit-attix/src/components/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport locationData from \"../locationData.js\";\n\nfunction Map() {\n  _s();\n\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 10,\n      defaultCenter: {\n        lat: 39.748859,\n        lng: -104.99752\n      },\n      children: [locationData.map(loc => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: loc.lat,\n          lng: loc.lng\n        },\n        onClick: () => {\n          setSelectedLocation(loc);\n        }\n      }, loc.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)), selectedLocation && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: selectedLocation.lat,\n          lng: selectedLocation.lng\n        },\n        onCloseClick: () => selectedLocation(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Location details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Map, \"pGedlDpRVZiPTL4140bC/BFKe+Y=\");\n\n_c = Map;\nconst WrappedMap = withScriptjs(_c2 = withGoogleMap(Map));\n_c3 = WrappedMap;\nexport default function Contact() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"50vw\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(WrappedMap, {\n      googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyC9JB8ol62HnhEKe6V1kNBSMao5UbmzV-o`,\n      loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }, this),\n      containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }, this),\n      mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n_c4 = Contact;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"WrappedMap$withScriptjs\");\n$RefreshReg$(_c3, \"WrappedMap\");\n$RefreshReg$(_c4, \"Contact\");","map":{"version":3,"sources":["/Users/macuser/projects/crossfit-attix/src/components/Contact.js"],"names":["React","useState","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","locationData","Map","selectedLocation","setSelectedLocation","lat","lng","map","loc","id","WrappedMap","Contact","width","height"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,EAAmBC,YAAnB,EAAiCC,aAAjC,EAAgDC,MAAhD,EAAwDC,UAAxD,QAAyE,mBAAzE;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,IAAD,CAAxD;AAEA,sBACE;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,WAAW,EAAE,EADf;AAEE,MAAA,aAAa,EAAE;AAAEU,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,GAAG,EAAE,CAAC;AAAxB,OAFjB;AAAA,iBAIGL,YAAY,CAACM,GAAb,CAAkBC,GAAD,iBAChB,QAAC,MAAD;AAEE,QAAA,QAAQ,EAAE;AACRH,UAAAA,GAAG,EAAEG,GAAG,CAACH,GADD;AAERC,UAAAA,GAAG,EAAEE,GAAG,CAACF;AAFD,SAFZ;AAME,QAAA,OAAO,EAAE,MAAM;AACbF,UAAAA,mBAAmB,CAACI,GAAD,CAAnB;AACD;AARH,SACOA,GAAG,CAACC,EADX;AAAA;AAAA;AAAA;AAAA,cADD,CAJH,EAgBGN,gBAAgB,iBACf,QAAC,UAAD;AACE,QAAA,QAAQ,EAAE;AACRE,UAAAA,GAAG,EAAEF,gBAAgB,CAACE,GADd;AAERC,UAAAA,GAAG,EAAEH,gBAAgB,CAACG;AAFd,SADZ;AAKE,QAAA,YAAY,EAAE,MAAMH,gBAAgB,CAAC,IAAD,CALtC;AAAA,+BAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCH;;GApCQD,G;;KAAAA,G;AAsCT,MAAMQ,UAAU,GAAGb,YAAY,OAACC,aAAa,CAACI,GAAD,CAAd,CAA/B;MAAMQ,U;AAEN,eAAe,SAASC,OAAT,GAAkB;AAC7B,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAZ;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,YAAY,EAAG,+HADjB;AAEE,MAAA,cAAc,eAAE;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFlB;AAGE,MAAA,gBAAgB,eAAE;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHpB;AAIE,MAAA,UAAU,eAAE;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV;AAAZ;AAAA;AAAA;AAAA;AAAA;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUH;MAXuBF,O","sourcesContent":["import React, {useState} from 'react'\nimport {GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow} from \"react-google-maps\"\nimport locationData from \"../locationData.js\"\n\nfunction Map() {\n\n    const [selectedLocation, setSelectedLocation] = useState(null)\n\n    return (\n      <div>\n        <GoogleMap\n          defaultZoom={10}\n          defaultCenter={{ lat: 39.748859, lng: -104.99752 }}\n        >\n          {locationData.map((loc) => (\n            <Marker\n              key={loc.id}\n              position={{\n                lat: loc.lat,\n                lng: loc.lng,\n              }}\n              onClick={() => {\n                setSelectedLocation(loc);\n              }}\n            />\n          ))}\n          {selectedLocation && (\n            <InfoWindow\n              position={{\n                lat: selectedLocation.lat,\n                lng: selectedLocation.lng,\n              }}\n              onCloseClick={() => selectedLocation(null)}\n            >\n              <div>Location details</div>\n            </InfoWindow>\n          )}\n        </GoogleMap>\n      </div>\n    );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\n\nexport default function Contact(){\n    return (\n      <div style={{ width: \"50vw\", height: \"100vh\" }}>\n        <WrappedMap\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyC9JB8ol62HnhEKe6V1kNBSMao5UbmzV-o`}\n          loadingElement={<div style={{ height: \"100%\" }} />}\n          containerElement={<div style={{ height: \"100%\" }} />}\n          mapElement={<div style={{ height: \"100%\" }} />}\n        />\n      </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}